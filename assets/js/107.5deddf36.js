(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{666:function(s,n,a){"use strict";a.r(n);var e=a(16),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"alignas、alignof、sizeof实现内存对齐分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alignas、alignof、sizeof实现内存对齐分配"}},[s._v("#")]),s._v(" alignas、alignof、sizeof实现内存对齐分配")]),s._v(" "),a("p",[s._v("对一个类型为T的对象数组分配内存，且满足其内存对齐要求：")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// - 分配大小为sizeof(T) * n\n// - 对齐方式为alignof(T)\nT *p;\nposix_memalign(reinterpret_cast<void **>(&p), alignof(T), sizeof(T) * n);\n\n// 或者：\ntypename std::aligned_storage<sizeof(T), alignof(T)>::type storage;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("注意typename指示一个类型名，而非定义一个类型，以下声明了一个T::iterator类型的变量itr，其中T是一个模板实例化时才知道的类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    typename T::iterator itr;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果没有typename指示，T::iterator会被认为是T的静态变量，而不是类型名。")]),s._v(" "),a("p",[s._v("typename关键字不会定义一个类型，如果你想定义一个新类型的话，你必须这样：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("typedef typename T::iterator ITR;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("下面是一个AlignedAllocator的示例")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#if defined(__cpp_aligned_new)\ntemplate <typename T> using AlignedAllocator = std::allocator<T>;\n#else\ntemplate <typename T> struct AlignedAllocator {\n  using value_type = T;\n\n  T *allocate(std::size_t n) {\n    if (n > std::numeric_limits<std::size_t>::max() / sizeof(T)) {\n      throw std::bad_array_new_length();\n    }\n#ifdef _WIN32\n    auto *p = static_cast<T *>(_aligned_malloc(sizeof(T) * n, alignof(T)));\n    if (p == nullptr) {\n      throw std::bad_alloc();\n    }\n#else\n    T *p;\n    if (posix_memalign(reinterpret_cast<void **>(&p), alignof(T),\n                       sizeof(T) * n) != 0) {\n      throw std::bad_alloc();\n    }\n#endif\n    return p;\n  }\n\n  void deallocate(T *p, std::size_t) {\n#ifdef _WIN32\n    _aligned_free(p);\n#else\n    free(p);\n#endif\n  }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("h3",{attrs:{id:"地址对齐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#地址对齐"}},[s._v("#")]),s._v(" 地址对齐")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("优点：提高性能\n假设计算机的字大小为4个字节（32位），CPU每次只能对4的倍数内存地址进行读取, 如果一个4字节的变量其地址是4的倍数，那么cpu一次就可以读出来。如果不是4的倍数，那就要读两次。")])]),s._v(" "),a("li",[a("p",[s._v("默认结构体的对齐方式：\n"),a("a",{attrs:{href:"https://blog.csdn.net/u011404495/article/details/54837797",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.csdn.net/u011404495/article/details/54837797"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("假设首变量地址为0，其内部成员的地址是自身对齐长度的整数倍。")])]),s._v(" "),a("li",[a("p",[s._v("禁用对齐")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  struct pkg_hdr {\n    uint32_t len;\n    uint32_t code;\n    uint8_t  type;\n  } __attribute__((packed));\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"alignas用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alignas用法"}},[s._v("#")]),s._v(" alignas用法")]),s._v(" "),a("p",[s._v("参考： "),a("a",{attrs:{href:"https://zouzhongliang.com/index.php/2019/07/07/c11xinzengalignasguanjianzizuoyong/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://zouzhongliang.com/index.php/2019/07/07/c11xinzengalignasguanjianzizuoyong/"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#include <string>\n#include <iostream>\nusing namespace std;\n\nstruct struct_Test1 { char c; int i; double d; };\nstruct struct_Test2 { char c; double d; int i; };\n\nstruct alignas(16) struct_a16 \n{ char c; int i; double d; //inner same as test1 };\n\nstruct alignas(32) struct_a32\n{ char c; int i; double d; //inner same as test1 };\n\nint main()\n{\n    struct_Test1 test1;\n    struct_Test2 test2;\n    struct_a16 a16;\n    struct_a32 a32;\n\n    cout << "char alignment:" << alignof(char) << endl;     //1\n    cout << "int alignment:" << alignof(int) << endl;       //4\n    cout << "double alignment:" << alignof(double) << endl; //8\n\n    cout << "test1 size:" << sizeof(test1) << endl;         //16\n    cout << "test2 size:" << sizeof(test2) << endl;         //24        \n    cout << "test1 alignment:" << alignof(test1) << endl;   //8\n    cout << "test2 alignment:" << alignof(test2) << endl;   //8\n    \n    cout << "a16 alignment:" << alignof(a16) << endl;   //16\n    cout << "a32 alignment:" << alignof(a32) << endl;   //32\n    cout << "a16 size:" << sizeof(a16) << endl;         //16\n    cout << "a32 size:" << sizeof(a32) << endl;         //32\n\n    system("pause");\n    return 0;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);