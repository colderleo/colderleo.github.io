(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{747:function(n,s,t){"use strict";t.r(s);var i=t(16),a=Object(i.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("https://www.cnblogs.com/dongguolei/p/8086346.html")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#include <unistd.h>\n#include <stdio.h> \nint main () \n{ \n\tpid_t fpid; //fpid表示fork函数返回的值\n\tint count=0;\n\tfpid=fork(); //在这条语句之后，就变成两个进程在执行，而且都是接着往下执行。\n\tif (fpid < 0) \n\t\tprintf("error in fork!"); \n\telse if (fpid == 0) {\n\t\tprintf("i am the child process, my process id is %d/n",getpid()); \n\t\tprintf("我是爹的儿子/n");//对某些人来说中文看着更直白。\n\t\tcount++;\n\t}\n\telse {\n\t\tprintf("i am the parent process, my process id is %d/n",getpid()); \n\t\tprintf("我是孩子他爹/n");\n\t\tcount++;\n\t}\n\tprintf("统计结果是: %d/n",count);\n\treturn 0;\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br")])]),t("p",[n._v("在语句fpid=fork()之前，只有一个进程在执行这段代码，但在这条语句之后，就变成两个进程在执行了，这两个进程的几乎完全相同，将要执行的下一条语句都是if(fpid<0)")]),n._v(" "),t("p",[n._v("为什么两个进程的fpid不同呢，这与fork函数的特性有关。fork调用的一个奇妙之处就是它仅仅被调用一次，却能够返回两次，它可能有三种不同的返回值：")]),n._v(" "),t("ol",[t("li",[n._v("在父进程中，fork返回新创建子进程的进程ID；")]),n._v(" "),t("li",[n._v("在子进程中，fork返回0；")]),n._v(" "),t("li",[n._v("如果出现错误，fork返回一个负值；")])])])}),[],!1,null,null,null);s.default=a.exports}}]);