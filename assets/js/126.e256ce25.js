(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{639:function(n,s,a){"use strict";a.r(s);var e=a(16),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("https://www.cnblogs.com/xzlq/p/9504851.html")]),n._v(" "),a("p",[n._v("什么是placement new？")]),n._v(" "),a("p",[n._v("所谓placement new就是在用户指定的内存位置上构建新的对象，这个构建过程不需要额外分配内存，只需要调用对象的构造函数即可。\n举例来说:")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//普通的new\nclass foo{};\nfoo* pfoo = new foo;\n\n//placement_new\n// 1）分配内存\nchar* buff = new char[ sizeof(Foo) * N ];\nmemset( buff, 0, sizeof(Foo)*N );\n\n// 2）构建对象\nFoo* pfoo = new (buff)Foo;\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("p",[n._v("pfoo指向的对象的地址你是不能决定的，因为new已经为你做了这些工作。第一步分配内存，第二步调用类的构造函数。\n而placement new是怎么做的呢，说白了就是把原本new做的两步工作分开来。第一步你自己分配内存，第二步你调用类的构造函数在自己分配的内存上构建新的对象。")]),n._v(" "),a("p",[n._v("placement new的好处：\n1）在已分配好的内存上进行对象的构建，构建速度快。\n2）已分配好的内存可以反复利用，有效的避免内存碎片问题。")]),n._v(" "),a("p",[n._v("关于Placement new的标准用法，网上"),a("a",{attrs:{href:"http://www.cnblogs.com/felixYeou/archive/2009/04/15/1436209.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("有一篇文章"),a("OutboundLink")],1),n._v("讲得很清楚，我这里再转述一下。")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('class Foo\n{\n  char cc;\n  float f;\n\npublic:\n  void print() { std::cout << "ADDR: " << this << std::endl; }\n  void set_f( float _f ) { std::cout << "set f val : " << _f << std::endl; f = _f; }\n  void get_f() { std::cout << "get f val : " << f << std::endl; }\n};\n\n// 1）分配内存\nchar* buff = new char[ sizeof(Foo) * N ];\nmemset( buff, 0, sizeof(Foo)*N );\n\n// 2）构建对象\nFoo* pfoo = new (buff)Foo;\n\n// 3）使用对象\npfoo->print();\npfoo->set_f(1.0f);\npfoo->get_f();\n\n// 4）析构对象，显式的调用类的析构函数。\npfoo->~Foo();\n\n// 5）销毁内存\ndelete [] buff;上面5个步骤是标准的placement new的使用方法。\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br")])]),a("p",[n._v("对于buff这块内存可以反复使用，只要重复2）、3）、4）步骤即可。")]),n._v(" "),a("p",[n._v("placement new还可以解决的一个问题是建立带参数的构造函数对象数组。\n代码示例如下：")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('class CPong\n{\npublic:\n  CPong( int m ) : v(m) { std::cout << "CPong ctor." << std::endl; }\n\nprivate:\n  int v;\n};\nchar* pong = new char[ sizeof(CPong) * 10 ];\nCPong* pp = (CPong*)pong;\n\nfor ( int i=0; i<10; ++i )\n{\n  new (pp+i)CPong(i);\n}\n\nfor ( int j=0; j<10; ++j )\n{\n  pp[j].~CPong();\n}\n\ndelete [] pong;\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);