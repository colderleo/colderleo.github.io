(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{643:function(s,n,a){"use strict";a.r(n);var e=a(16),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("map和multi内部是按key排序的，底层用红黑树实现排序，与set、multiset一样。")]),s._v(" "),a("p",[s._v("map内的元素为pair<>")]),s._v(" "),a("h4",{attrs:{id:"map-插入、遍历、查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-插入、遍历、查找"}},[s._v("#")]),s._v(" map 插入、遍历、查找")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#include<map>\n#include<string>\n#include<iostream>\nusing namespace std;\n\ntypedef pair<string, int> PAIR;\n\nostream& operator<<(ostream& out, const PAIR& p) {\n  return out << p.first << "\\t" << p.second;\n}\n\nint main() {\n  map<string, int> m;\n  map<int, string>::iterator iter;\n    \n  //插入\n  m["LiMin"] = 90; \n  m.insert(make_pair("Bing",99));\n  \n  //取出\n  cout<< m["LiMin"];  //数组下标的形式，取出key为LiMin对应的value\n  iter=m.begin();   //iter 访问。\n  iter->first;   iter->second;\n    \n    \n  //遍历\n  for (map<string, int>::iterator iter = m.begin();  iter != m.end();  ++iter) {\n    cout << iter->second << endl;\n  }\n    \n  //查找\n  m.count(key);//返回key对应的数量。\n  iter = m.find(key);//返回一个iter指向查找到的元素。如果没找到返回end\n    \n  //lower_bound 和 upper_bound 跟set里面差不多。\n  iter = m.lower_bound(3);//找到key大于等于3的元素\n  iter = m.upper_bound(3);//找到key大于3的元素\n  m.equal_range(3);//返回上面两个的pair。 m.equal_range(3).first就是lower_bound\n  \n  //删除 erase\n  m.erase(iter);\n  m.erase(iter_begin,iter_end);\n  m.erase(key); //删除这个key对应的元素\n  m.clear(); //清空\n    \n  m.empty(); //为空返回true\n  \n    \n  return 0;\n }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("h4",{attrs:{id:"pair对象和make-pair"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pair对象和make-pair"}},[s._v("#")]),s._v(" pair对象和make_pair")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('template <class T1, class T2> struct pair{...};\n\n//pair初始化\npair<int, double> p1;  //使用默认构造函数\npair<int, double> p2(1, 2.4);  //用给定值初始化\npair<int, double> p3(p2);  //拷贝构造函数\n\n//访问时，可用first和second访问：\np.first, p.second;\n    \n//make_pair无需写出型别， 就可以生成一个pair对象 \nstd::make_pair(42, \'aaa\'); \n而不必费力写成： \nstd::pair<int, char>(42, \'aaa\');\n    \n//typedef\ntypedef pair<string, string>    author;\nauthor pro("May", "Lily");\nauthor joye("James", "Joyce");\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);