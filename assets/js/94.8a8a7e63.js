(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{678:function(n,s,a){"use strict";a.r(s);var e=a(16),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h4",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[n._v("#")]),n._v(" 题目")]),n._v(" "),a("p",[n._v("https://www.nowcoder.com/test/question/done?tid=11815561&qid=58539#summary")]),n._v(" "),a("p",[n._v("牛客网，公司真题--滴滴编程题")]),n._v(" "),a("p",[n._v("某餐馆有n张桌子，每张桌子有一个参数：a 可容纳的最大人数； 有m批客人，每批客人有两个参数:b人数，c预计消费金额。 在不允许拼桌的情况下，请实现一个算法选择其中一部分客人，使得总预计消费金额最大")]),n._v(" "),a("p",[n._v("输入：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("n，m，\na1、a2...an\nb1，c1\nb2，c2\n...\nbm，cm\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("h4",{attrs:{id:"思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[n._v("#")]),n._v(" 思路")]),n._v(" "),a("p",[n._v("这道题思路比较简单：对客人进行排序，钱多的排前面；对桌子进行排序，容量大排前面。")]),n._v(" "),a("p",[n._v("钱多的先安排，安排桌子容量符合要求的容量最少的。依次安排所以的客人。")]),n._v(" "),a("h4",{attrs:{id:"牛客网上的推荐答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#牛客网上的推荐答案"}},[n._v("#")]),n._v(" 牛客网上的推荐答案")]),n._v(" "),a("p",[n._v("感觉大神们写的优先队列的答法很牛逼，一时间竟看不太懂，正赶上最近在研究multiset数据结构，\n即兴写了一发，直接AC，也是有点小开心，其实，时间主要浪费在了寻找合适的桌子上了，\nmultiset里的lower_bound简直就是为了这道题设计的，哈哈。")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <set>\n//multiset也包含在 <set> 里面\n \nstruct guest {\n    int num;\n    int money;\n};\n\n//定义cmp函数，用于对guest进行排序，money大的排前面，money相同的情况下num(人数)少的排前面。\n//sort(people.begin(), people.end(), cmp);  cmp返回ture的排前面。\nbool cmp(guest a, guest b) {\n    if (a.money == b.money) {\n        return a.num < b.num;\n    }\n    return a.money > b.money;\n}\n\n\nint main() {\n    using namespace std;\n    int n, m;\n    while (cin >> n >> m) {\n        multiset<int> desk;\n        vector<guest> people(m);\n        long long ans = 0;\n        \n        //输入n张桌子的容量\n        for (int i = 0; i < n; i++) {\n            int temp;\n            cin >> temp;\n            desk.insert(temp);\n        }\n        \n        //输入m批客人的money和num\n        for (int i = 0; i < m; i++) {\n            int a, b;\n            cin >> a >> b;\n            people[i].num = a;\n            people[i].money = b;\n        }\n        //对客人进行排序\n        sort(people.begin(), people.end(), cmp);\n        \n        //安排座位的时候，先安排钱多的\n        for (int i = 0; i < m; i++) {\n            if (desk.empty()) {//如果没桌子了就退出\n                break;\n            }\n            if (people[i].num <= *desk.rbegin()) {//如果客人的数量小于等于最大的桌子容量，就给安排\n                ans += people[i].money;\n                desk.erase(desk.lower_bound(people[i].num));//安排满足要求的容量最小的桌子\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);