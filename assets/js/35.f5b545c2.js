(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{519:function(s,n,t){"use strict";t.r(n);var a=t(21),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"实现popen输出到标准输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现popen输出到标准输出"}},[s._v("#")]),s._v(" 实现popen输出到标准输出")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("pid_t "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mypopen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    pid_t pid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" pid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" _cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sprintf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" _cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//will never get here.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"参考原文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考原文"}},[s._v("#")]),s._v(" 参考原文")]),s._v(" "),t("p",[s._v("Linux popen()函数内部实现原理： https://www.joxrays.com/linux-popen/")]),s._v(" "),t("p",[s._v("最近发现了一个函数 "),t("strong",[s._v("popen()/pclose()")]),s._v(" ,所以现在打算理清下思路…")]),s._v(" "),t("h4",{attrs:{id:"正文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[s._v("#")]),s._v(" 正文")]),s._v(" "),t("p",[s._v("linux下的 "),t("strong",[s._v("popen")]),s._v(" 函数,大概就是通过 "),t("strong",[s._v("fork")]),s._v(" 一个子进程来执行命令并返回执行的结果给父进程.")]),s._v(" "),t("blockquote",[t("p",[s._v("The popen() function shall "),t("strong",[s._v("execute the command")]),s._v(" specified by the string command. It shall "),t("strong",[s._v("create a pipe")]),s._v(" between the calling program and the executed command, and shall return a pointer to a stream that can be used to either read from or write to the pipe.")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://pubs.opengroup.org/onlinepubs/009695399/functions/popen.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://pubs.opengroup.org/onlinepubs/009695399/functions/popen.html"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("函数声明如下")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#include<stdio.h>\n/* Create a new stream connected to a pipe running the given command.\n   This function is a possible cancellation point and therefore not\n   marked with __THROW.  */\nextern FILE *popen (const char *__command, const char *__modes) __wur;\n/* Close a stream opened by popen and return the status of its child.\n   This function is a possible cancellation point and therefore not\n   marked with __THROW.  */\nextern int pclose (FILE *__stream);\nCopy\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("当然了,更重要的是要知道该函数内部是怎么实现的,大概步骤如下:"),t("strong",[s._v("(此处仅讨论子进程返回结果给父进程!)")])]),s._v(" "),t("ol",[t("li",[s._v("父进程通过 "),t("strong",[s._v("pipe()")]),s._v(" 创建 "),t("strong",[s._v("读/写匿名管道")]),s._v(" ,并关闭写管道pfd[1]")]),s._v(" "),t("li",[s._v("然后 "),t("strong",[s._v("fork()")]),s._v(" 创建子进程")]),s._v(" "),t("li",[s._v("子进程 "),t("strong",[s._v("close()")]),s._v(" 读管道pfd[0]和标准输出(STDOUT_FILENO=1) ,并 "),t("strong",[s._v("dup()")]),s._v(" 写管道pfd[1]")]),s._v(" "),t("li",[s._v("子进程通过 "),t("strong",[s._v("execl()")]),s._v(" 执行命令,执行的结果为标准输出重定向到了写管道pfd[1]")]),s._v(" "),t("li",[s._v("父进程 "),t("strong",[s._v("wait()")]),s._v(" 子进程退出,接着 "),t("strong",[s._v("fdopen()")]),s._v(" 通过文件描述符返回一个 "),t("strong",[s._v("FILE*")]),s._v(" . 注意返回文件指针时,不能关闭读管道pfd[0],可以通过后续 fclose() 关闭该描述符")]),s._v(" "),t("li",[t("strong",[s._v("fclose()")]),s._v(" 关闭该读管道pfd[0]")])]),s._v(" "),t("p",[s._v("简单实现代码如下:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('FILE* mypopen(const char*cmd){\n    //管道文件描述符\n    int pfd[2];\n    if(pipe(pfd)!=0){\n        printf("error: %s\\n",strerror(errno));\n        exit(EXIT_FAILURE);\n    }\n    //创建子进程\n    pid_t  pid=fork();\n    if(pid==0){\n        close(pfd[0]);\n        \n         //重定向 标准输出 到 写管道\n        close(STDOUT_FILENO);\n        dup(pfd[1]);\n        char _cmd[50]{0};\n        sprintf(_cmd,"%s",cmd);\n        execl("/bin/sh","sh","-c",_cmd,NULL);\n        exit(0);\n    }\n    //关闭写管道\n    close(pfd[1]);\n    //等待子进程退出\n    int p= wait(0);\n   //printf("%d terminal\\n",p);\n    //直接读取数据\n    //char buffer[1024*2]={0};\n    //read(pfd[0],buffer,1024*2);\n    FILE* pfile =fdopen(pfd[0],"r");\n    if(!pfile) return NULL;\n    return pfile;\n}\nCopy\nint main() {\n    FILE *file= mypopen("ls -lSah");\n    char buffer[1024];\n    while(fgets(buffer,1024,file)){\n        printf("%s",buffer);\n    }\n    //close pfd[0]!\n    fclose(file);\n    return 0;\n}\nCopy\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br")])]),t("p",[s._v("其中,较重要的是在子进程中重定向标准输出,这里给出其他方法重定向标准输出到管道描述符")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//方法1\n//重定向 标准输出 到 写管道\nclose(STDOUT_FILENO);\ndup(pfd[1]);\n//方法2,相当于先close(STDOUT_FILENO) ,再dup(pfd[1])\ndup2(pfd[1],STDOUT_FILENO);\n//方法3\nclose(STDOUT_FILENO);\nint fd=fcntl(pfd[1],F_DUPFD);\nCopy\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h4",{attrs:{id:"结尾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结尾"}},[s._v("#")]),s._v(" 结尾")]),s._v(" "),t("p",[s._v("参考文章: http://blog.csdn.net/litingli/article/details/5891726")])])}),[],!1,null,null,null);n.default=e.exports}}]);