(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{539:function(n,t,s){"use strict";s.r(t);var a=s(21),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"将socket设置为非阻塞-non-blocking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将socket设置为非阻塞-non-blocking"}},[n._v("#")]),n._v(" 将socket设置为非阻塞(non-blocking)")]),n._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/SprintfWater/article/details/9232073",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://blog.csdn.net/SprintfWater/article/details/9232073"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("有一个非常有迷惑性的做法是：\nu_long has = 1;\nioctl(m_sock, FIONBIO , &has);\n这个函数会非常无耻的返回你success，但是它实际上很可能什么也没做。")]),n._v(" "),s("p",[n._v("正确的做法应该是使用fcntl：\nint flags = fcntl(m_sock, F_GETFL, 0);\nfcntl(m_sock, F_SETFL, flags|O_NONBLOCK);")]),n._v(" "),s("p",[n._v("这真是一个隐蔽的问题，折腾了我两天。线程每每停留在send()调用那里，我始终没怀疑到：用ioctl设置FIONBIO成功之后，socket竟然还是阻塞的。")]),n._v(" "),s("h2",{attrs:{id:"查看是否为non-blocking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看是否为non-blocking"}},[n._v("#")]),n._v(" 查看是否为non-blocking")]),n._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[n._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[n._v("include")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("<fcntl.h>")])]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("fcntl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" F_GETFL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"flags&O_NONBLOCK=%x, O_NONBLOCK=%x, flags=%x\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&")]),n._v("O_NONBLOCK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" O_NONBLOCK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//flags&O_NONBLOCK=800, O_NONBLOCK=800, flags=802")]),n._v("\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("h2",{attrs:{id:"fcntl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fcntl"}},[n._v("#")]),n._v(" fcntl()")]),n._v(" "),s("p",[s("a",{attrs:{href:"https://man7.org/linux/man-pages/man2/fcntl.2.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://man7.org/linux/man-pages/man2/fcntl.2.html"),s("OutboundLink")],1)]),n._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[n._v("FCNTL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("                Linux Programmer's Manual               FCNTL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\nNAME         "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("top")]),n._v("\n       fcntl - manipulate "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" descriptor\nSYNOPSIS         "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("top")]),n._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#include <fcntl.h>")]),n._v("\n\n       int fcntl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("int fd, int cmd, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("..")]),n._v(". /* arg */ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\nDESCRIPTION         "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("top")]),n._v("\n       fcntl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" performs one of the operations described below on the\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("open")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" descriptor fd.  The operation is determined by cmd.\n\n       fcntl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" can take an optional third argument.  Whether or not this\n       argument is required is determined by cmd.  The required argument\n       "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("type")]),n._v(" is indicated "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("in")]),n._v(" parentheses after each cmd name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("in "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("most")]),n._v("\n       cases, the required "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("type")]),n._v(" is int, and we identify the argument\n       using the name arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(", or void is specified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" the argument is not\n       required.\n\n       Certain of the operations below are supported only since a\n       particular Linux kernel version.  The preferred method of\n       checking whether the "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("host")]),n._v(" kernel supports a particular operation\n       is to invoke fcntl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" with the desired cmd value and "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("then")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("test")]),n._v("\n       whether the call failed with EINVAL, indicating that the kernel\n       does not recognize this value.\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);