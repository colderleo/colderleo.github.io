(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{591:function(s,n,a){"use strict";a.r(n);var e=a(21),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("题目：https://www.nowcoder.com/practice/1b25a41f25f241228abd7eb9b768ab9b?tpId=46&tqId=29084&tPage=3&rp=3&ru=/ta/leetcode&qru=/ta/leetcode/question-ranking")]),s._v(" "),a("p",[s._v("解答：https://www.nowcoder.com/questionTerminal/1b25a41f25f241228abd7eb9b768ab9b\n来源：牛客网")]),s._v(" "),a("p",[s._v("Given a binary tree, return the inorder traversal of its nodes' values.")]),s._v(" "),a("p",[s._v("For example:\nGiven binary tree{1,#,2,3},")]),s._v(" "),a("p",[s._v("1\n"),a("br"),s._v("\n2\n/\n3")]),s._v(" "),a("p",[s._v("return[1,3,2].")]),s._v(" "),a("p",[s._v("Note: Recursive solution is trivial, could you do it iteratively?")]),s._v(" "),a("h4",{attrs:{id:"我的解答-c-递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的解答-c-递归"}},[s._v("#")]),s._v(" 我的解答 C++ 递归")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution {\npublic:\n    vector<int> result;\n    vector<int> inorderTraversal(TreeNode *root) {\n        if(!root)\n            return result;\n\n        inorderTraversal(root->left);\n        result.push_back(root->val);\n        inorderTraversal(root->right);\n        return result;\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h4",{attrs:{id:"解答2-栈循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解答2-栈循环"}},[s._v("#")]),s._v(" 解答2 栈循环")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode *root) {\n        vector<int> result;\n        if(!root)\n            return result;\n        stack<TreeNode*> s;\n        TreeNode *p=root;\n        while(!s.empty() || p!=NULL)\n        {\n            while(p)\n            {\n                s.push(p);\n                p=p->left;  \n            }\n            if(!s.empty())\n            {\n                p = s.top();\n                s.pop();\n                result.push_back(p->val);\n                p = p->right;\n            }\n        }\n        return result;\n    }\n};\n\n评论：\ncoolMatt1024 ：你好，我想问一下为什么会有if(!s.empty())这句呢？循环的条件要么是s非空，要么是p存在，第二种情况下p一定会被压栈，所以s一定非空，感觉不需要这句话啊\n2018-06-18 15:28:58回复赞(1)\n∝小小马 回复 coolMatt1024 ：你把那句话删了，运行一下，看一下报错的样例就知道为什么了\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h4",{attrs:{id:"解答3-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解答3-java"}},[s._v("#")]),s._v(" 解答3 Java")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//非递归实现二叉树的中序遍历\npublic ArrayList<Integer> inorderTraversal(TreeNode root) {\n    Stack<TreeNode> stack = new Stack<TreeNode>();\n    ArrayList<Integer> res = new ArrayList<Integer>();\n    TreeNode node = root;\n    while (!stack.isEmpty() || node != null) {\n        while (node != null) {\n            stack.push(node);\n            node = node.left;\n        }\n\n        node = stack.pop();\n        res.add(node.val);\n        node = node.right;\n\n    }\n    return res;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);