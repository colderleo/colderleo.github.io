(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{663:function(n,e,s){"use strict";s.r(e);var i=s(16),a=Object(i.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h4",{attrs:{id:"通过宏定义控制debug打印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过宏定义控制debug打印"}},[n._v("#")]),n._v(" 通过宏定义控制debug打印")]),n._v(" "),s("p",[n._v("参考： "),s("a",{attrs:{href:"https://github.com/bytebutt/c-debug-header.git",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/bytebutt/c-debug-header.git"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("debug.h")]),n._v(" "),s("div",{staticClass:"language-c++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('#ifndef DEBUG_H_INCLUDED\n#define DEBUG_H_INCLUDED\n\n#include <stdio.h>\n#include <string.h> //strrchr()\n\n// open macros.\n#define DEBUG\n#define DEBUG_COLOR\n\n#ifdef DEBUG_COLOR /* Colorize with ANSI escape sequences. */\n#  define DEBUG_COLOR_RED     "[31m"\n#  define DEBUG_COLOR_GREEN   "[32m"\n#  define DEBUG_COLOR_YELLOW  "[33m"\n#  define DEBUG_COLOR_BLUE    "[34m"\n#  define DEBUG_COLOR_PURPLE  "[35m"\n#  define DEBUG_COLOR_RESET   "[m"\n#else\n#  define DEBUG_COLOR_RED     ""\n#  define DEBUG_COLOR_GREEN   ""\n#  define DEBUG_COLOR_YELLOW  ""\n#  define DEBUG_COLOR_BLUE    ""\n#  define DEBUG_COLOR_PURPLE  ""\n#  define DEBUG_COLOR_RESET   ""\n#endif /* DEBUG_COLOR */\n\n\n#ifdef DEBUG\n\n#define filename(x) strrchr(x,\'/\')?strrchr(x,\'/\')+1:x\n\n#define debug_prefix(tag,color)  printf(color "[%s|%d|%s]: " tag DEBUG_COLOR_RESET, filename(__FILE__), __LINE__, __func__)\n\n#  define debug(...)      do { debug_prefix("",          DEBUG_COLOR_BLUE);   printf(__VA_ARGS__); printf("\\n"); } while(0)\n#  define debug_warning(...)    do { debug_prefix("WARNING: ", DEBUG_COLOR_YELLOW); printf(__VA_ARGS__); printf("\\n"); } while(0)\n#  define debug_error(...)    do { debug_prefix("ERROR: ",   DEBUG_COLOR_RED);    printf(__VA_ARGS__); printf("\\n"); } while(0)\n#  define debug_info(...)  do { debug_prefix("INFO: ",     DEBUG_COLOR_RESET);  printf(__VA_ARGS__); printf("\\n"); } while(0)\n#  define debug_wtf(...)  do { debug_prefix("WTF: ",     DEBUG_COLOR_RESET);  printf(__VA_ARGS__); printf("\\n"); } while(0)\n\n#  define assert(expr)    do { if (!(expr)) { debug_prefix("ASSERTION FAILED: ", DEBUG_COLOR_PURPLE); printf(#expr); printf("\\n"); } } while(0)\n\n#else\n\n#  define debug(...)      ((void) 0)\n#  define debug_warning(...)    ((void) 0)\n#  define debug_error(...)    ((void) 0)\n#  define debug_info(...)  ((void) 0)\n#  define debug_wtf(...)  ((void) 0)\n#  define assert(...)     ((void) 0)\n\n#endif /* DEBUG */\n#endif /* DEBUG_H_INCLUDED */\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);