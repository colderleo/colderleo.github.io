(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{606:function(n,t,_){"use strict";_.r(t);var e=_(16),v=Object(e.a)({},(function(){var n=this,t=n.$createElement,_=n._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[_("p",[n._v("https://blog.csdn.net/qq_40395278/article/details/81199281")]),n._v(" "),_("p",[n._v("回车、换行的区别  \n他们间的区别其实是个回车换行的问题")]),n._v(" "),_("p",[n._v("先来段历史")]),n._v(" "),_("p",[n._v("回车”（Carriage Return）和“换行”（Line Feed）这两个概念的来历和区别。")]),n._v(" "),_("p",[n._v("符号        ASCII码        意义")]),n._v(" "),_("p",[n._v("\\n               10          换行")]),n._v(" "),_("p",[n._v("\\r                13            回车CR")]),n._v(" "),_("p",[n._v("在计算机还没有出现之前，有一种叫做电传打字机（Teletype Model 33，Linux/Unix下的tty概念也来自于此）的玩意，每秒钟可以打10个字符。但是它有一个问题，就是打完一行换行的时候，要用去0.2秒，正好可以打两个字符。要是在这0.2秒里面，又有新的字符传过来，那么这个字符将丢失。")]),n._v(" "),_("p",[n._v("于是，研制人员想了个办法解决这个问题，就是在每行后面加两个表示结束的字符。一个叫做“回车”，告诉打字机把打印头定位在左边界；另一个叫做“换行”，告诉打字机把纸向下移一行。这就是“换行”和“回车”的来历，从它们的英语名字上也可以看出一二。")]),n._v(" "),_("p",[n._v("后来，计算机发明了，这两个概念也就被般到了计算机上。那时，存储器很贵，一些科学家认为在每行结尾加两个字符太浪费了，加一个就可以。于是，就出现了分歧。")]),n._v(" "),_("p",[n._v("在Windows中：")]),n._v(" "),_("p",[n._v("'\\r' 回车，回到当前行的行首，而不会换到下一行，如果接着输出的话，本行以前的内容会被逐一覆盖；")]),n._v(" "),_("p",[n._v("'\\n' 换行，换到当前位置的下一行，而不会回到行首；")]),n._v(" "),_("p",[n._v('Unix系统里，每行结尾只有“<换行>”，即"\\n"；Windows系统里面，每行结尾是“<回车><换行>”，即“\\r\\n”；Mac系统里，每行结尾是“<回车>”，即"\\r"；。一个直接后果是，Unix/Mac系统下的文件在Windows里打开的话，所有文字会变成一行；而Windows里的文件在Unix/Mac下打开的话，在每行的结尾可能会多出一个^M符号。\n————————————————\n版权声明：本文为CSDN博主「I18N_R」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_40395278/article/details/81199281')])])}),[],!1,null,null,null);t.default=v.exports}}]);