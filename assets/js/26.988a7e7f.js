(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{698:function(s,n,e){"use strict";e.r(n);var t=e(16),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("https://www.cnblogs.com/feiyun8616/p/6548658.html")]),s._v(" "),e("h1",{attrs:{id:"set-x与set-x指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-x与set-x指令"}},[s._v("#")]),s._v(" set -x与set +x指令")]),s._v(" "),e("p",[s._v("用于脚本调试。set是把它下面的命令打印到屏幕\nset -x 是开启 set +x是关闭 set -o是查看 (xtrace)，set去追中一段代码的显示情况。\n执行set -x后，对整个脚本有效。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@mybox bin]# ls -l /bin/bash\n+ ls --color=tty -l /bin/bash \n-rwxr-xr-x 1 root root 722684 Jul 12  2006 /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("针对一部分script，可以选择 set -x 和 set +x配套使用。比如在一个脚本里：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("set -x            # activate debugging from here\nw\nset +x            # stop debugging from here\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("hr"),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('set指令能设置所使用shell的执行方式，可依照不同的需求来做设置\n　-a 　标示已修改的变量，以供输出至环境变量。 \n　-b 　使被中止的后台程序立刻回报执行状态。 \n　-C 　转向所产生的文件无法覆盖已存在的文件。 \n　-d 　Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 \n　-e 　若指令传回值不等于0，则立即退出shell。　　 \n　-f　 　取消使用通配符。 \n　-h 　自动记录函数的所在位置。 \n　-H Shell 　可利用"!"加<指令编号>的方式来执行history中记录的指令。 \n　-k 　指令所给的参数都会被视为此指令的环境变量。 \n　-l 　记录for循环的变量名称。 \n　-m 　使用监视模式。 \n　-n 　只读取指令，而不实际执行。 \n　-p 　启动优先顺序模式。 \n　-P 　启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 \n　-t 　执行完随后的指令，即退出shell。 \n　-u 　当执行时使用到未定义过的变量，则显示错误信息。 \n　-v 　显示shell所读取的输入值。 \n　-x 　执行指令后，会先显示该指令及所下的参数。 \n　+<参数> 　取消某个set曾启动的参数。\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);